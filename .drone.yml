---
kind: pipeline
type: docker
name: build-amd64-go1.22
platform:
  os: linux
  arch: amd64

environment:
  CGO_ENABLED: "0"
  GOOS: linux
  GOARCH: amd64

steps:
  - name: build
    image: golang:1.22-alpine3.20
    commands:
      - apk update
      - apk add --no-cache git
      - go build -v ./cmd/go-away

  - name: test-wasm-success
    image: golang:1.22-alpine3.20
    commands:
      - >
        go run ./cmd/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
        -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json
        -make-challenge-out ./embed/challenge/js-pow-sha256/test/make-challenge-out.json
        -verify-challenge ./embed/challenge/js-pow-sha256/test/verify-challenge.json
        -verify-challenge-out 0

  - name: test-wasm-fail
    image: golang:1.22-alpine3.20
    commands:
      - >
        go run ./cmd/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
        -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json
        -make-challenge-out ./embed/challenge/js-pow-sha256/test/make-challenge-out.json
        -verify-challenge ./embed/challenge/js-pow-sha256/test/verify-challenge-fail.json
        -verify-challenge-out 1

---
kind: pipeline
type: docker
name: build-amd64-go1.24
platform:
  os: linux
  arch: amd64

environment:
  CGO_ENABLED: "0"
  GOOS: linux
  GOARCH: amd64

steps:
  - name: build
    image: golang:1.24-alpine3.21
    commands:
      - apk update
      - apk add --no-cache git
      - go build -v ./cmd/go-away
---
kind: pipeline
type: docker
name: build-arm64-go1.24
platform:
  os: linux
  arch: arm64

environment:
  CGO_ENABLED: "0"
  GOOS: linux
  GOARCH: arm64

steps:
  - name: build
    image: golang:1.24-alpine3.21
    commands:
      - apk update
      - apk add --no-cache git
      - go build -v ./cmd/go-away
...

