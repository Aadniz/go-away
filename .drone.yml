---
environment:
  GOTOOLCHAIN: "local"
  CGO_ENABLED: "0"
  GOARCH: amd64
  GOOS: linux
kind: pipeline
name: build-1.24-alpine3.20-amd64
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - apk update
  - apk add --no-cache git
  - mkdir .bin
  - go build -v -o ./.bin/go-away ./cmd/go-away
  - go build -v -o ./.bin/test-wasm-runtime ./cmd/test-wasm-runtime
  image: golang:1.24-alpine3.20
  name: build
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge.json -verify-challenge-out
    0
  depends_on:
  - build
  image: alpine:3.20
  name: test-wasm-success
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge-fail.json -verify-challenge-out
    1
  depends_on:
  - build
  image: alpine:3.20
  name: test-wasm-fail
type: docker
---
environment:
  GOTOOLCHAIN: "local"
  CGO_ENABLED: "0"
  GOARCH: arm64
  GOOS: linux
kind: pipeline
name: build-1.24-alpine3.20-arm64
platform:
  arch: arm64
  os: linux
steps:
- commands:
  - apk update
  - apk add --no-cache git
  - mkdir .bin
  - go build -v -o ./.bin/go-away ./cmd/go-away
  - go build -v -o ./.bin/test-wasm-runtime ./cmd/test-wasm-runtime
  image: golang:1.24-alpine3.20
  name: build
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge.json -verify-challenge-out
    0
  depends_on:
  - build
  image: alpine:3.20
  name: test-wasm-success
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge-fail.json -verify-challenge-out
    1
  depends_on:
  - build
  image: alpine:3.20
  name: test-wasm-fail
type: docker
---
environment:
  GOTOOLCHAIN: "local"
  CGO_ENABLED: "0"
  GOARCH: amd64
  GOOS: linux
kind: pipeline
name: build-1.24-alpine3.21-amd64
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - apk update
  - apk add --no-cache git
  - mkdir .bin
  - go build -v -o ./.bin/go-away ./cmd/go-away
  - go build -v -o ./.bin/test-wasm-runtime ./cmd/test-wasm-runtime
  image: golang:1.24-alpine3.21
  name: build
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge.json -verify-challenge-out
    0
  depends_on:
  - build
  image: alpine:3.21
  name: test-wasm-success
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge-fail.json -verify-challenge-out
    1
  depends_on:
  - build
  image: alpine:3.21
  name: test-wasm-fail
type: docker
---
environment:
  GOTOOLCHAIN: "local"
  CGO_ENABLED: "0"
  GOARCH: arm64
  GOOS: linux
kind: pipeline
name: build-1.24-alpine3.21-arm64
platform:
  arch: arm64
  os: linux
steps:
- commands:
  - apk update
  - apk add --no-cache git
  - mkdir .bin
  - go build -v -o ./.bin/go-away ./cmd/go-away
  - go build -v -o ./.bin/test-wasm-runtime ./cmd/test-wasm-runtime
  image: golang:1.24-alpine3.21
  name: build
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge.json -verify-challenge-out
    0
  depends_on:
  - build
  image: alpine:3.21
  name: test-wasm-success
- commands:
  - ./.bin/test-wasm-runtime -wasm ./embed/challenge/js-pow-sha256/runtime/runtime.wasm
    -make-challenge ./embed/challenge/js-pow-sha256/test/make-challenge.json -make-challenge-out
    ./embed/challenge/js-pow-sha256/test/make-challenge-out.json -verify-challenge
    ./embed/challenge/js-pow-sha256/test/verify-challenge-fail.json -verify-challenge-out
    1
  depends_on:
  - build
  image: alpine:3.21
  name: test-wasm-fail
type: docker
---
kind: pipeline
name: publish-latest
platform:
  arch: amd64
  os: linux
steps:
- environment:
    DOCKER_BUILDKIT: "1"
  image: plugins/buildx
  name: docker
  privileged: true
  settings:
    auto_tag_suffix: alpine3.21
    build_args:
      from: alpine:3.21
      from_builder: golang:1.24-alpine3.21
    builder_driver: docker-container
    compress: true
    password:
      from_secret: git_password
    platform:
    - linux/amd64
    - linux/arm64
    registry: git.gammaspectra.live
    repo: git.gammaspectra.live/git/go-away
    tags:
    - latest
    username:
      from_secret: git_username
trigger:
  branch:
  - master
  event:
  - push
type: docker
---
kind: pipeline
name: publish-1.24-alpine3.21
platform:
  arch: amd64
  os: linux
steps:
- environment:
    DOCKER_BUILDKIT: "1"
  image: plugins/buildx
  name: docker
  privileged: true
  settings:
    auto_tag: true
    auto_tag_suffix: alpine3.21
    build_args:
      from: alpine:3.21
      from_builder: golang:1.24-alpine3.21
    builder_driver: docker-container
    compress: true
    password:
      from_secret: git_password
    platform:
    - linux/amd64
    - linux/arm64
    registry: git.gammaspectra.live
    repo: git.gammaspectra.live/git/go-away
    username:
      from_secret: git_username
trigger:
  event:
  - promote
  - tag
  target:
  - production
type: docker
---
kind: pipeline
name: publish-1.24-alpine3.20
platform:
  arch: amd64
  os: linux
steps:
- environment:
    DOCKER_BUILDKIT: "1"
  image: plugins/buildx
  name: docker
  privileged: true
  settings:
    auto_tag: true
    auto_tag_suffix: alpine3.20
    build_args:
      from: alpine:3.20
      from_builder: golang:1.24-alpine3.20
    builder_driver: docker-container
    compress: true
    password:
      from_secret: git_password
    platform:
    - linux/amd64
    - linux/arm64
    registry: git.gammaspectra.live
    repo: git.gammaspectra.live/git/go-away
    username:
      from_secret: git_username
trigger:
  event:
  - promote
  - tag
  target:
  - production
type: docker
---
kind: signature
hmac: 8583621811fa483a6594352a8f9eeca7d66f6509f8e36bd2299b9e0723ed1451

...
